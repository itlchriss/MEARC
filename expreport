total=`find ./datasets/leetcode-behavioural -type f -name "*.mr" | wc -l`
# missing count mr 
p2ok=`grep -r 'ensures' result | grep -v 'bad input' | wc -l`
derivationerror=`grep -r 'ERROR:root:' result | wc -l`
p1ok=`grep -rlZv '\\\' ./datasets/leetcode-behavioural/*/tmp/*.mr | xargs -0 grep -l 'exists' | wc -l`
p1failed=`grep -rl 'Failed' ./datasets/leetcode-behavioural/*/tmp/*.mr | wc -l`
p1unreducted=`grep -rl '\\\' ./datasets/leetcode-behavioural/*/tmp/*.mr | wc -l`
p1percent=`bc -l <<<"($p1ok / $total) * 100"`
p2percent=`bc -l <<< "($p2ok / $p1ok) * 100"`
echo 'Total sentence processed: ' $total
echo 'P1 success cases: ' $p1ok
echo 'P1 failed cases: ' $p1failed
echo 'P1 reducted incompletely cases: ' $p1unreducted
echo 'P2 success cases: ' $p2ok
echo 'P1 successful rate: ' $p1percent
echo 'P2 successful rate: ' $p2percent