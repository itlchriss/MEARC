- term: negative
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '0'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '0'
    reference_type: '-1'
  interpretation: -(Subj)
- term: negative
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '3'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '3'
    reference_type: '-1'
  interpretation: -(Subj)
- term: negative
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '4'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: -(Subj)
- term: negative
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '5'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '5'
    reference_type: '-1'
  interpretation: -(Subj)
- term: negative
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '6'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '6'
    reference_type: '-1'
  interpretation: -(Subj)
- term: negative
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '7'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '7'
    reference_type: '-1'
  interpretation: -(Subj)
- term: greater_than_or_equal
  syntax:
  - JJ
  arguments:  
  - symbol: Subj
    primitive_type: '*'
    reference_type: '*'
  - symbol: Dat
    primitive_type: '*'
    reference_type: '*'
  interpretation: (Subj) >= (Dat)
- term: greater_than
  syntax:
  - JJ
  arguments:  
  - symbol: Subj
    primitive_type: '*'
    reference_type: '*'
  - symbol: Dat
    primitive_type: '*'
    reference_type: '*'
  interpretation: (Subj) > (Dat)
- term: less_than
  syntax:
  - JJ
  arguments:  
  - symbol: Subj
    primitive_type: '*'
    reference_type: '*'
  - symbol: Dat
    primitive_type: '*'
    reference_type: '*'
  interpretation: (Subj) < (Dat)
- term: less_than_or_equal
  syntax:
  - JJ
  arguments:  
  - symbol: Subj
    primitive_type: '*'
    reference_type: '*'
  - symbol: Dat
    primitive_type: '*'
    reference_type: '*'
  interpretation: (Subj) <= (Dat)
- term: literal
  syntax:
  - NN
  arguments:
  - symbol: '*'
    primitive_type: '*'
    reference_type: '*'
  interpretation: ''
- term: null
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '*'
    reference_type: '0'
  interpretation: '(Subj) == null'
- term: null
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '*'
    reference_type: '1'
  interpretation: '(Subj) == null'
- term: null
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '*'
    reference_type: '2'
    type_names:
    - 'list'
    - 'collection'
  interpretation: '(Subj) == null'
- term: true
  syntax:
  - JJ
  arguments:
  - symbol: '*'
    primitive_type: '-1'
    reference_type: '*'
  interpretation: 'true'
- term: false
  syntax:
  - JJ
  arguments:
  - symbol: '*'
    primitive_type: '-1'
    reference_type: '*'
  interpretation: 'false'
- term: be
  syntax:
  - VBZ
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '-1'
  - symbol: y
    primitive_type: '*'
    reference_type: '-1'
  interpretation: (x) == (y)
- term: result
  syntax:
  - NN
  arguments:
  - symbol: '*'
    primitive_type: '*'
    reference_type: '*'
  interpretation: \result
- term: prime
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '3'
    reference_type: '-1'
  interpretation: (x) == 2 || ((x) > 2 && (\forall int k; (x) > 2 && 2 <= k && k <=
    (x)/2; (x)%k != 0))
- term: prime
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x) == 2 || ((x) > 2 && (\forall int k; (x) > 2 && 2 <= k && k <=
    (x)/2; (x)%k != 0))
- term: prime
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '5'
    reference_type: '-1'
  interpretation: (x) == 2 || ((x) > 2 && (\forall int k; (x) > 2 && 2 <= k && k <=
    (x)/2; (x)%k != 0))
- term: even
  syntax:
  - RB
  arguments:
  - symbol: x
    primitive_type: '3'
    reference_type: '-1'
  interpretation: (x) % 2 == 0
- term: even
  syntax:
  - RB
  arguments:
  - symbol: x
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x) % 2 == 0
- term: even
  syntax:
  - RB
  arguments:
  - symbol: x
    primitive_type: '5'
    reference_type: '-1'
  interpretation: (x) % 2 == 0
- term: length
  syntax:
  - NN
  arguments:
  - symbol: '*'
  synthesised_datatype:
    primitive_type: 'R'
    reference_type: 'R'
  interpretation: __REL__length
- term: size
  syntax:
  - NN
  arguments:
  - symbol: '*'
  interpretation: __REL__size
- term: sort
  syntax:
  - VBN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
  interpretation: \forall int k; 0 <= k && k < (x).length-1; (x)[k] <= (x)[k+1]
- term: sort
  syntax:
  - VBN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    type_names: 
      - 'list'      
      - 'collection'
  interpretation: \forall int k; 0 <= k && k < (x).size()-1; (x).get(k) <= (x).get(k+1)
- term: value
  syntax:
  - NNS
  arguments:
  - symbol: '*'
    primitive_type: '*'
    reference_type: '*'
  interpretation: __REL__value
- term: reference
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '*'
  interpretation: (x)
- term: empty
  syntax:
  - JJ
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
  interpretation: (x).length == 0
- term: empty
  syntax:
  - JJ
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '1'
  interpretation: (x).length() == 0
- term: empty
  syntax:
  - JJ
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    type_names:
      - 'list'
      - 'collection'
  interpretation: (x).size() == 0
- term: equal
  syntax:
  - JJ
  arguments:
  - symbol: Subj
    primitive_type: '*'
    reference_type: '-1'
  - symbol: Dat
    primitive_type: '*'
    reference_type: '-1'
  synthesised_datatype:
    primitive_type: '0'
    reference_type: '-1'
  interpretation: (Subj) == (Dat)
- term: __REL__length
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x).length
- term: __REL__length
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    type_names:
    - 'list'
    - 'collection'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x).size()
- term: __REL__length
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '1'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x).length()
- term: __REL__size
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x).length
- term: __REL__size
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    type_names:
      - 'list'
      - 'collection'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x).size()
- term: __REL__size
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '1'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: (x).length()
- term: element
  syntax:
  - NNS
  arguments:
  - symbol: '*'
    primitive_type: '*'
    reference_type: '*'
  interpretation: __REL__element
- term: in
  syntax:
  - IN
  arguments:
  - symbol: y
    primitive_type: '*'
    reference_type: '0'
  - symbol: Subj
    primitive_type: '*'
    reference_type: '2'
    type_names:
    - __REL__element
    - __REL__value
  interpretation: (y)[i]
- term: Rel
  syntax:
  - Rel
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '*'
  - symbol: y
    primitive_type: '*'
    reference_type: '*'
  interpretation: REL(x,y)
- term: type_array_
  syntax:
  - NN
  arguments:
  - symbol: '*'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '0'
  interpretation: ''
- term: type_string_
  syntax:
  - NN
  arguments:
  - symbol: '*'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '1'
  interpretation: ''
- term: type_arrays_
  syntax:
  - NN
  - NNS
  - NNP
  - NNPS
  arguments:
  - symbol: '*'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '0'
  interpretation: ''
- term: type_integer_
  syntax:
  - NN
  arguments:
  - symbol: '*'
  synthesised_datatype:
    primitive_type: '4'
    reference_type: '-1'
  interpretation: ''
- term: type_boolean_
  syntax:
  - NN
  arguments:
  - symbol: '*'
  synthesised_datatype:
    primitive_type: '0'
    reference_type: '-1'
  interpretation: ''
- term: keyword_result
  syntax:
  - NN
  arguments:
  - symbol: '*'
  interpretation: \result
- term: return
  syntax:
  - VBN
  arguments:
  - symbol: '*'
  interpretation: \result
- term: of
  syntax:
  - IN
  arguments:
  - symbol: x
    primitive_type: 'R'
    reference_type: 'R'
  - symbol: y
    primitive_type: '*'
    reference_type: '*'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '*'
  interpretation: __INVOKE__REL__
- term: __REL__element
  syntax:
  - NNS
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '*'
  interpretation: (x)[i]
- term: __REL__element
  syntax:
  - NNS
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '1'
  synthesised_datatype:
    primitive_type: '2'
    reference_type: '*'
  interpretation: (x).charAt(i)
- term: __REL__element
  syntax:
  - NNS
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    type_names:
    - 'list'
    - 'collection'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '*'
  interpretation: (x).get(i)
- term: __REL__value
  syntax:
  - NNS
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '*'
  interpretation: (x)[i]
- term: __REL__value
  syntax:
  - NNS
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '1'
  synthesised_datatype:
    primitive_type: '2'
    reference_type: '*'
  interpretation: (x).charAt(i)
- term: __REL__value
  syntax:
  - NNS
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    type_names:
    - 'list'
    - 'collection'
  synthesised_datatype:
    primitive_type: '*'
    reference_type: '*'
  interpretation: (x).get(i)
- term: unique
  syntax:
  - JJ
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '2'
    lazy_resolve: __REF__type
    type_names:
    - 'list'
    - 'collection'
  interpretation: Collections.frequency((__REF__type), (x)) == 1
- term: unique
  syntax:
  - JJ
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
    lazy_resolve: __REF__type
  interpretation: Collections.frequency(Arrays.asList((__REF__type)), (x)) == 1
- term: sum
  syntax:
  - NN
  arguments:
  - symbol: x
    primitive_type: '*'
    reference_type: '0'
    lazy_resolve: __REF__type
  interpretation: \sum int i; 0 <= i < __REF__type.length; (x)
- term: evenly_divided
  syntax:
  - VBN
  arguments:
  - symbol: Subj
    primitive_type: '4'    
    reference_type: '-1'
  - symbol: Acc
    primitive_type: '4'    
    reference_type: '-1'
  interpretation: (Acc) % (Subj) == 0

