Preconditions:
- The input arrays `startPos`, `homePos`, `rowCosts`, and `colCosts` are not null.
- The length of `rowCosts` is equal to `m`.
- The length of `colCosts` is equal to `n`.
- The values in `rowCosts` and `colCosts` are non-negative integers.
- The values in `startPos` and `homePos` are valid cell coordinates within the grid.

Postconditions:
- The method returns an integer representing the minimum total cost for the robot to return home.
- The robot's final position is equal to `homePos`.
- The robot has moved from `startPos` to `homePos` using the minimum cost path.
- The total cost is calculated by summing the costs of each move made by the robot.
- The robot can only move one cell at a time in four directions: left, right, up, or down.
- The robot cannot move outside the boundary of the grid.
- The cost of moving up or down into a cell is determined by the corresponding value in `rowCosts`.
- The cost of moving left or right into a cell is determined by the corresponding value in `colCosts`.