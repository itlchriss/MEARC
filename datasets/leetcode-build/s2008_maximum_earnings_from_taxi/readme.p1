Preconditions:
- The input `n` is a positive integer representing the number of points on the road.
- The input `rides` is a 2D integer array where each element `rides[i]` represents a passenger request with the format `[start_i, end_i, tip_i]`.
- The length of `rides` is between 1 and 3 * 10^- Each element `rides[i]` has a length of - The start point `start_i` is a positive integer less than the end point `end_i` and less than or equal to `n`.
- The tip amount `tip_i` is a positive integer less than or equal to 10^
Postconditions:
- The method returns a long integer representing the maximum number of dollars that can be earned by picking up passengers optimally.
- The maximum earnings are calculated by summing the earnings from each passenger, where the earnings for each passenger `i` is equal to `end_i - start_i + tip_i`.
- The taxi can only drive at most one passenger at a time.
- The taxi cannot change its direction.
- The taxi can drop off a passenger and pick up a different passenger at the same point.