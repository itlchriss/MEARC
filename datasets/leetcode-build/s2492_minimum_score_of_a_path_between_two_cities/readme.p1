Preconditions:
- The input integer `n` must be a positive integer.
- The input 2D array `roads` must have a length greater than or equal to 1.
- Each element `roads[i]` in the `roads` array must be an array of length 3.
- The first element `roads[i][0]` in each `roads[i]` array must be a positive integer between 1 and `n`, inclusive.
- The second element `roads[i][1]` in each `roads[i]` array must be a positive integer between 1 and `n`, inclusive.
- The first and second elements `roads[i][0]` and `roads[i][1]` in each `roads[i]` array must be distinct.
- The third element `roads[i][2]` in each `roads[i]` array must be a positive integer between 1 and 10^4, inclusive.
- The cities graph may not be connected, but there is at least one path between city 1 and city `n`.

Postconditions:
- The method returns an integer representing the minimum possible score of a path between cities 1 and `n`.
- The returned score is the minimum distance of a road in the path.
- The path can contain the same road multiple times.
- The path can visit cities 1 and `n` multiple times.