- The integer result is the integer value of the given Lisp-like expression.
- The expression can be an integer, let expression, add expression, mult expression, or an assigned variable.
- The let expression takes the form "(let v1 e1 v2 e2 ... vn en expr)", where variables are assigned values sequentially and the value of the let expression is the value of the final expression.
- The add expression takes the form "(add e1 e2)" and returns the addition of the evaluations of e1 and e2.
- The mult expression takes the form "(mult e1 e2)" and returns the multiplication of the evaluations of e1 and e2.
- Variable names start with a lowercase letter followed by zero or more lowercase letters or digits.
- The concept of scope is applied, where the innermost scope is checked first for the value of a variable.
- All expressions are legal and guaranteed to evaluate to an integer.
- The answer and all intermediate calculations are guaranteed to fit in a 32-bit integer.