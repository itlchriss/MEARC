
Each movie is given as a 2D integer array `entries` where <code>entries[i] = [shop<sub>i</sub>, movie<sub>i</sub>, price<sub>i</sub>]</code> indicates that there is a copy of movie <code>movie<sub>i</sub></code> at shop <code>shop<sub>i</sub></code> with a rental price of <code>price<sub>i</sub></code>. Each shop carries **at most one** copy of a movie <code>movie<sub>i</sub></code>. initial prepare.sh run.sh **Search**: Finds the **cheapest 5 shops** that have an **unrented copy** of a given movie. The shops should be sorted by **price** in ascending order, and in case of a tie, the one with the **smaller** <code>shop<sub>i</sub></code> should appear first. If there are less than 5 matching shops, then all of them should be returned. If no shop has an unrented copy, then an empty list should be returned. initial prepare.sh run.sh **Rent**: Rents an **unrented copy** of a given movie from a given shop. initial prepare.sh run.sh **Drop**: Drops off a **previously rented copy** of a given movie at a given shop. initial prepare.sh run.sh `List<Integer> search(int movie)` Returns a list of shops that have an **unrented copy** of the given `movie` as described above. initial prepare.sh run.sh `void rent(int shop, int movie)` Rents the given `movie` from the given `shop`. initial prepare.sh run.sh `void drop(int shop, int movie)` Drops off a previously rented `movie` at the given `shop`.
