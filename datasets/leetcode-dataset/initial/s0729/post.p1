Preconditions for the method public Meeting(int start, int end):
- The start time and end time parameters must be valid integers representing time in a specific format.

Postconditions for the method public Meeting(int start, int end):
- A new Meeting object is created with the specified start and end times.

Preconditions for the method public int compareTo(Meeting anotherMeeting):
- The anotherMeeting parameter must be a valid Meeting object.

Postconditions for the method public int compareTo(Meeting anotherMeeting):
- The method returns a negative integer if the current Meeting object's end time is earlier than the end time of anotherMeeting.
- The method returns a positive integer if the current Meeting object's end time is later than the end time of anotherMeeting.
- The method returns zero if the current Meeting object's end time is equal to the end time of anotherMeeting.

Preconditions for the method public MyCalendar():
- None

Postconditions for the method public MyCalendar():
- A new MyCalendar object is created.

Preconditions for the method public boolean book(int start, int end):
- The start time and end time parameters must be valid integers representing time in a specific format.

Postconditions for the method public boolean book(int start, int end):
- The method returns true if the event can be added to the calendar successfully without causing a double booking.
- The method returns false if the event cannot be added to the calendar due to a double booking.
- If the event can be added to the calendar successfully, it is added to the calendar and does not cause a double booking.