Behavioural requirements for the Java methods:

public FoodRatings(String[] foods, String[] cuisines, int[] ratings)
   - Preconditions:
     - The arrays `foods`, `cuisines`, and `ratings` must have the same length.
     - Each element in the `foods` array must be a non-null string.
     - Each element in the `cuisines` array must be a non-null string.
     - Each element in the `ratings` array must be a non-negative integer.
   - Postconditions:
     - The `FoodRatings` object is created with the given arrays.

public void changeRating(String food, int newRating)
   - Preconditions:
     - The `food` parameter must be a non-null string.
     - The `newRating` parameter must be a non-negative integer.
   - Postconditions:
     - The rating of the specified `food` is updated to the `newRating` value.

public String highestRated(String cuisine)
   - Preconditions:
     - The `cuisine` parameter must be a non-null string.
   - Postconditions:
     - Returns the name of the food item that has the highest rating for the given `cuisine`.
     - If there is a tie, the item with the lexicographically smaller name is returned.

public int compare(Food f1, Food f2)
   - Preconditions:
     - The `f1` and `f2` parameters must be non-null `Food` objects.
   - Postconditions:
     - Returns a negative integer if `f1` has a lower rating than `f2`.
     - Returns zero if `f1` and `f2` have the same rating.
     - Returns a positive integer if `f1` has a higher rating than `f2`.