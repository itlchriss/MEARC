myCircularDeque.insertLast(1); // return True myCircularDeque.insertLast(2); // return True myCircularDeque.insertFront(3); // return True myCircularDeque.insertFront(4); // return False, the queue is full. myCircularDeque.getRear(); // return 2 myCircularDeque.isFull(); // return True myCircularDeque.deleteLast(); // return True myCircularDeque.insertFront(4); // return True myCircularDeque.getFront(); // return 4
initial prepare.sh run.sh `boolean insertFront()` Adds an item at the front of Deque. Returns `true` if the operation is successful, or `false` otherwise. initial prepare.sh run.sh `boolean insertLast()` Adds an item at the rear of Deque. Returns `true` if the operation is successful, or `false` otherwise. initial prepare.sh run.sh `boolean deleteFront()` Deletes an item from the front of Deque. Returns `true` if the operation is successful, or `false` otherwise. initial prepare.sh run.sh `boolean deleteLast()` Deletes an item from the rear of Deque. Returns `true` if the operation is successful, or `false` otherwise. initial prepare.sh run.sh `int getFront()` Returns the front item from the Deque. Returns `-1` if the deque is empty. initial prepare.sh run.sh `int getRear()` Returns the last item from Deque. Returns `-1` if the deque is empty. initial prepare.sh run.sh `boolean isEmpty()` Returns `true` if the deque is empty, or `false` otherwise. initial prepare.sh run.sh `boolean isFull()` Returns `true` if the deque is full, or `false` otherwise.
