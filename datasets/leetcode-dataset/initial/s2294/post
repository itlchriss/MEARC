Since two subsequences were created, we return 2. It can be shown that 2 is the minimum number of subsequences needed. Since two subsequences were created, we return 2. Note that another optimal solution is to partition nums into the two subsequences [1] and [2,3]. Since three subsequences were created, we return 3. It can be shown that 3 is the minimum number of subsequences needed.
Return _the **minimum** number of subsequences needed such that the difference between the maximum and minimum values in each subsequence is **at most**_ `k`_._
