initial prepare.sh run.sh `int getRandom()` Returns a random element from the current multiset of elements. The probability of each element being returned is **linearly related** to the number of same values the multiset contains. randomizedCollection.insert(1); // return true since the collection does not contain 1. randomizedCollection.insert(1); // return false since the collection contains 1. randomizedCollection.insert(2); // return true since the collection does not contain 2. // - return 1 with probability 2/3, or // - return 2 with probability 1/3. randomizedCollection.remove(1); // return true since the collection contains 1. randomizedCollection.getRandom(); // getRandom should return 1 or 2, both equally likely.
initial prepare.sh run.sh `bool insert(int val)` Inserts an item `val` into the multiset, even if the item is already present. Returns `true` if the item is not present, `false` otherwise. initial prepare.sh run.sh `bool remove(int val)` Removes an item `val` from the multiset if present. Returns `true` if the item is present, `false` otherwise. Note that if `val` has multiple occurrences in the multiset, we only remove one of them. initial prepare.sh run.sh `int getRandom()` Returns a random element from the current multiset of elements. The probability of each element being returned is **linearly related** to the number of same values the multiset contains.
